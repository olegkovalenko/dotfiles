#
# $Id: vim-keys.conf,v 1.2 2010-09-18 09:36:15 nicm Exp $
#
# vim-keys.conf, v1.2 2010/09/12
#
# By Daniel Thau.  Public domain.
#
# This configuration file binds many vi- and vim-like bindings to the
# appropriate tmux key bindings.  Note that for many key bindings there is no
# tmux analogue.  This is intended for tmux 1.3, which handles pane selection
# differently from the previous versions

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi

set -g prefix C-a
unbind C-b
bind-key C-a send-prefix

set -sg escape-time 1
set -g base-index 1
setw -g pane-base-index 1

bind r source-file ~/.tmux.conf \; display "Reloaded!"

# bind -n C-r source-file ~/.tmux.conf # -n tells that the keybinding donesn't require pressing the prefix

bind | split-window -h
bind - split-window -v

bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# -r means repeatable, the default repeat limit is 500 ms
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# setw -g mode-mouse on
# set -g mouse-select-pane on
# set -g mouse-resize-pane on
# set -g mouse-select-wondow on

# setw -g mode-mouse off
# set -g default-terminal "screen-256color"

# $ for i in {0..255} ; do printf "\x1b[38;5;${i}mcolour${i}\n"; done
set -g status-fg white # colour232 # colour152 # white
set -g status-bg colour8 # colour158 # black

# changing window list colors
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim

setw -g window-status-current-fg black # white
setw -g window-status-current-bg cyan # red
setw -g window-status-current-attr bright

# changing pane devider colors
set -g pane-border-fg cyan # green
set -g pane-border-bg black # black
set -g pane-active-border-fg cyan # white
set -g pane-active-border-bg cyan # yellow

set -g message-fg white
set -g message-bg black
set -g message-attr bright

# recall that command area using readline and i can use all vi features
# echo "set editing-mode vi" > ~/.inputrc

set -g status-left "#[fg=green]#S"

# set -g status-left-length 40
# set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"

# you can format date however you like, using starndard strftime() time
# formatting mechanism, see $ man 3 strftime
# #(shell-command) notifications ?
set -g status-right "#[fg=white]\"#h\" %H:%M %Y-%m-%d"

set -g status-utf8 on
set utf8 on
# kepping status bar info up to date
# set -g status-inverval 60
#
# centering the window list
set -g status-justify centre

# identifying activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# you can configure a defauult configuration for you system in /etc/tmux.conf
# this is great for situations where you've set up a shared server
# so members of you team can collaborate, or if you just want to ensure
# that every user has some sensible defaults. 
#
# set -a appends values onto existing options rather than replacing the
# option's value

unbind g
bind g choose-session

# make p/n repeatable
unbind p
bind-key -r 'p' select-window -t:-
unbind n
bind-key -r 'n' select-window -t:+

# unbind [
# bind Escape copy-mode
# unbind p
# bind p paste-buffer
# bind -t vi-copy 'v' begin-selection
# helps a lot :list-keys -t vi-copy
bind -t vi-copy 'a' begin-selection
bind -t vi-copy 's' copy-selection

bind 'I' run "tmux save-buffer - | xclip -i"
bind 'C' run "tmux save-buffer - | xclip -i -sel clipboard"
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"
bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"

unbind O
bind O new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
unbind o
bind o last-window \; swap-pane -s tmp.1 \; kill-window -t tmp

bind -r ( switch-client -p
bind -r ) switch-client -n
# http://superuser.com/questions/430650/let-tmux-set-urxvt-window-title-according-to-session-name
# Turn on window titles
set -g set-titles on
# Set window title string
#  #H  Hostname of local host
#  #I  Current window index
#  #P  Current pane index
#  #S  Session name
#  #T  Current window title
#  #W  Current window name
#  #   A literal ‘#’
# set -g set-titles-string '#S:#I.#P #W' # default
set -g set-titles-string '#S:#I.#P #W | #T'

# Automatically set window title
# setw -g automatic-rename
